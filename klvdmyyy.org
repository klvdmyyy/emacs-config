#+TITLE: My Org-Babel based Emacs configuration
#+LANGUAGE: en
#+OPTIONS: H:5 toc:nil creator:nil email:nil author:t timestamp:t tags:nil tex:verbatim
#+PROPERTY: header-args :results silent :noweb no-export

This is my Emacs configuration file that is loaded with =org-babel-load-file= in the Emacs init file.

* todolist

Roadmap of the my configuration

- [ ] Maybe use git submodules for site-packages
- [ ] Maybe migrate to Guix (read about RDE)
  - Read [[https://gist.github.com/noah-evans/745c5dabf92fa62078c8d7a6952d790d][github gist]]
  - Read about [[https://github.com/abcdw/rde][rde]]
- [ ] Migrate from Archlinux to Guix/Nix as main OS
- [ ] Maybe use Emacs as window manager
  - [[https://github.com/emacs-exwm/exwm][for x11]]
  - [[https://framagit.org/nll/ewx/-/tree/master][for wayland]]

* Preparing

#+begin_src emacs-lisp
  (load-theme 'modus-vivendi) ; Load default dark theme (light version: modus-operandi)
  
  (defun klvdmyyy/open-config ()
    (interactive)
    (find-file config-file))
#+end_src

Check current OS for some variables
#+begin_src emacs-lisp
  (defun system-is-linux ()
    (string-equal system-type "gnu/linux"))
  (defun system-is-windows ()
    (string-equal system-type "windows-nt"))
#+end_src

Setup development directories
#+begin_src emacs-lisp
  (setq development-folder-name "development")

  (when (system-is-windows)
    (defun klvdmyyy/development ()
      (interactive)
      (dired (concat "D:\\" development-folder-name))))
  (when (system-is-linux)
    (defun klvdmyyy/development ()
      (interactive)
      (dired (concat "~/" development-folder-name))))
#+end_src

* Emacs default settings

** User information

#+begin_src emacs-lisp
  (setq user-full-name "Klementiev Dmitry")
  (setq user-email-address "klementievd08@yandex.ru")
#+end_src

** UI/UX

Simplify Emacs built-in UI
#+begin_src emacs-lisp
  (setq frame-title-format "klvdmyyy's GNU Emacs: %b")
  (setq inhibit-splash-screen t)
  (setq ingibit-startup-message t)
  (tooltip-mode -1)
  (menu-bar-mode -1)
  (tool-bar-mode -1)
  (scroll-bar-mode -1)
  (blink-cursor-mode -1)
  (setq use-dialog-box nil)
  (setq redisplay-dont-pause t)
  (setq ring-bell-function 'ignore) ; TODO: Custom ring-bell function
#+end_src

Custom UI/UX
#+begin_src emacs-lisp
  (set-frame-font "JetBrains Mono 12" nil t)
  (setq word-wrap t)
  (global-visual-line-mode t)
  (setq display-time-24hr-format t)
  (display-time-mode t)
  (size-indication-mode t)
#+end_src

Spaces-no-tabs
#+begin_src emacs-lisp
  (setq-default indent-tabs-mode nil)
  (setq tab-width 4)
#+end_src

Only require to type 'y' or 'n' instead of 'yes' or 'no' when prompted
#+begin_src emacs-lisp
  (defalias 'yes-or-no-p 'y-or-n-p)
#+end_src

** Remove backup/autosave files

#+begin_src emacs-lisp
  (setq make-backup-files nil)
  (setq auto-save-default nil)
  (setq auto-save-list-file-name nil)
#+end_src


* Package management

#+begin_src emacs-lisp
  (defvar bootstrap-version)
  (setq straight-repository-branch "develop")
  (let ((bootstrap-file
         (expand-file-name "straight/repos/straight.el/bootstrap.el" user-emacs-directory))
        (bootstrap-version 5))
    (unless (file-exists-p bootstrap-file)
      (with-current-buffer
  	(url-retrieve-synchronously
  	 "https://raw.githubusercontent.com/raxod502/straight.el/develop/install.el"
  	 'silent 'inhibit-cookies)
        (goto-char (point-max))
        (eval-print-last-sexp)))
    (load bootstrap-file nil 'nomessage))
#+end_src

#+begin_src emacs-lisp
  (setq use-package-always-ensure nil
        use-package-verbose 'debug)

  (use-package straight
    :custom
    (straight-host-usernames '((github . "klvdmyyy")))
    (straight-use-package-by-default t)
    (straight-register-package 'org)
    (straight-register-package 'org-contrib))
#+end_src

* Visual

Frame/Cursor properties
#+begin_src emacs-lisp
  (setq klvdmyyy/cursor-type 'box)
  (setq klvdmyyy/cursor-color "DarkOrange")

  (setq-default frame-background-mode 'dark)
  (set-mouse-color "white")

  ;; Only show cursor in active window
  (setq-default cursor-in-non-selected-windows nil)

  ;; Default frame properties frame position, color, etc
  (setq default-frame-alist
        `((cursor-type . ,klvdmyyy/cursor-type)
          (height . 60) (width . 100)
          (cursor-color . ,klvdmyyy/cursor-color)
          (internal-border-width . 24)
          (mouse-color . "white")))
#+end_src
