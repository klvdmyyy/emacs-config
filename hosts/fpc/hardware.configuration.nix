# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

let
  espDevice = "/dev/disk/by-label/ESP";
  mainDevice = "/dev/disk/by-label/MAIN";
  secondaryDevice = "/dev/disk/by-label/SECONDARY";
in
{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usb_storage" "sd_mod" ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.supportedFilesystems = ["btrfs"]; # Enable BTRFS support for boot settings

  fileSystems."/boot/efi" =
    {
      device = espDevice;
      fsType = "vfat";
    };

  fileSystems."/data" =
    {
      device = mainDevice;
      fsType = "btrfs";
      options = ["compress=zstd" "noatime"];
    };

  fileSystems."/" =
    {
      device = secondaryDevice;
      fsType = "btrfs";
      options = ["compress=zstd" "noatime"];
      neededForBoot = true;
    };

  /* TODO
  fileSystems."/data" =
    {
      device = secondaryDevice;
      fsType = "btrfs";
      options = ["subvol=@data" "compress=zstd" "noatime"];
    };

  fileSystems."/snapshots" =
    {
      device = secondaryDevice;
      fsType = "btrfs";
      options = ["subvol=@snapshots" "compress=zstd" "noatime"];
    };
  
  fileSystems."/" =
    {
      device = mainDevice;
      fsType = "btrfs";
      options = ["subvol=@" "compress=zstd" "noatime"];
    };

  fileSystems."/boot" =
    {
      device = mainDevice;
      fsType = "btrfs";
      options = ["subvol=@boot" "compress=zstd" "noatime"];
      neededForBoot = true;
    };

  fileSystems."/nix/store" =
    {
      device = mainDevice;
      fsType = "btrfs";
      options = ["subvol=@nixstore" "compress=zstd" "noatime"];
      neededForBoot = true;
    };

  fileSystems."/var/log" =
    {
      device = mainDevice;
      fsType = "btrfs";
      options = ["subvol=@varlog" "compress=zstd" "noatime"];
      neededForBoot = true;
    };

  fileSystems."/var/lib" =
    {
      device = mainDevice;
      fsType = "btrfs";
      options = ["subvol=@varlib" "compress=zstd" "noatime"];
    };

  fileSystems."/var/nix" =
    {
      device = mainDevice;
      fsType = "btrfs";
      options = ["subvol=@varnix" "compress=zstd" "noatime"];
      neededForBoot = true;
    };

  fileSystems."/home" =
    {
      device = mainDevice;
      fsType = "btrfs";
      options = ["subvol=@home" "compress=zstd" "noatime"];
    };*/

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp3s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp2s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
